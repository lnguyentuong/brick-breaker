{"version":3,"sources":["components/loader/index.tsx","components/canvas/conf.ts","components/canvas/state.ts","components/canvas/renderer.ts","components/canvas/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["loader","_jsxs","className","children","_jsx","FRICTION","RADIUS","kick","Audio","process","breaking","dist2","o1","o2","Math","pow","x","y","iterate","bound","ball","coord","dx","conf","width","dy","abs","_objectSpread","collideCircleBrick","circle","box","dxb1","dyb1","dxb2","dyb2","height","dxb3","dyb3","dxb4","dyb4","collideBoing","p1","p2","nx","ny","gx","gy","COLORS","toDoubleHexa","n","toString","drawRectangle","ctx","_ref2","color","beginPath","fillStyle","fillRect","computeColor","life","maxLife","baseColor","rgb","alpha","arguments","length","undefined","r","g","b","startsWith","hexR","slice","hexG","hexB","parseInt","splitted","replace","split","max","min","floor","concat","rgbaTorgb","render","state","_ctx$canvas","canvas","clear","pos","map","c","_ref","arc","PI","fill","drawCirle","player","endOfGame","font","strokeText","size","Canvas","Xbricks","Array","nbBox","Ybricks","j","i","push","initialState","_","index","invincible","ref","useRef","current","play","arr","filter","p","step","requestAnimationFrame","onClick","e","event","offsetX","offsetY","find","click","onMove","mouseMove","useEffect","getContext","initCanvas","addEventListener","removeEventListener","App","_useState","useState","_useState2","_slicedToArray","setSize","container","setTimeout","clientHeight","clientWidth","Loader","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17b97ea0.chunk.js","sourcesContent":["import './loader.css'\n\nconst loader = () => (\n  <div className=\"lds-ellipsis\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n)\nexport default loader\n","export const FRICTION = 1.0001\nexport const RADIUS = 20\nexport const MINMOVE = 0.1\n\nexport const BRICKLIFE = 2\nexport const PLAYERLIFE = 10\nexport const NBBOX = 50\nexport const NBLINES = 10\n","import * as conf from './conf'\ntype Point = { x: number; y: number}\ntype Coord = { x: number; y: number; dx: number; dy: number }\ntype Ball = { coord: Coord; life: number; invincible?: number }\ntype Brick = { coord: Point, height: number, width: number, life: number; bonus?: number}\ntype Size = { height: number; width: number }\nexport type State = {\n  pos: Array<Brick>\n  ball: Ball\n  size: Size\n  player: Brick\n  endOfGame: boolean\n}\n\nvar kick = new Audio(process.env.PUBLIC_URL + \"/Thwomp.wav\");\nvar breaking = new Audio(process.env.PUBLIC_URL + \"/Break.wav\");\n\nconst dist2 = (o1: Point, o2: Coord) =>\n  Math.pow(o1.x - o2.x, 2) + Math.pow(o1.y - o2.y, 2)\n\nconst iterate = (bound: Size, ball: Ball) => {\n  const coord = ball.coord\n  const dx =\n    (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS\n      ? -coord.dx\n      : coord.dx) * conf.FRICTION\n  const dy =\n    (/* coord.y + conf.RADIUS > bound.height ||  */coord.y < conf.RADIUS\n      ? -coord.dy\n      : coord.dy) * conf.FRICTION\n  if (Math.abs(dx) + Math.abs(dy) < conf.MINMOVE)\n    return { ...ball, coord: { ...coord, dx: 0, dy: 0 } }\n  return {\n    ...ball,\n    coord: {\n      x: coord.x + dx,\n      y: coord.y + dy,\n      dx,\n      dy,\n    },\n  }\n}\n\nexport const click =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    const { offsetX, offsetY } = event\n    const target = state.pos.find(\n      (p) =>\n        dist2(p.coord, { x: offsetX, y: offsetY, dx: 0, dy: 0 }) <\n        Math.pow(conf.RADIUS, 2) + 100\n    )\n    if (target) {\n      //target.coord.dx += Math.random() * 10\n      //target.coord.dy += Math.random() * 10\n    }\n    return state\n  }\n\nconst collide = (o1: Coord, o2: Coord) =>\n  dist2(o1, o2) < Math.pow(2 * conf.RADIUS, 2)\n\nconst collideCircleBrick = (circle: Coord, box: Brick) => {\n  let dxb1 = circle.x - box.coord.x;\n  let dyb1 = circle.y - box.coord.y;\n\n  let dxb2 = circle.x - box.coord.x;\n  let dyb2 = circle.y - box.coord.y-box.height;\n\n  let dxb3 = circle.x - box.coord.x - box.width;\n  let dyb3 = circle.y - box.coord.y;\n\n  let dxb4 = circle.x - box.coord.x - box.width;\n  let dyb4 = circle.y - box.coord.y - box.height;\n\n  //if(dxb1 * dxb1 + dyb1 * dyb1 <= (circle.radius + c2.radius) * (c1.radius + c2.radius)) return true;\n  if(circle.x + conf.RADIUS >= box.coord.x && circle.x - conf.RADIUS <= box.coord.x+100\n    && (dxb1 * dxb1 + dyb1 * dyb1 <= conf.RADIUS * conf.RADIUS\n    || dxb2 * dxb2 + dyb2 * dyb2 <= conf.RADIUS * conf.RADIUS\n    || dxb3 * dxb3 + dyb3 * dyb3 <= conf.RADIUS * conf.RADIUS\n    || dxb4 * dxb4 + dyb4 * dyb4 <= conf.RADIUS * conf.RADIUS\n    || (circle.y + conf.RADIUS >= box.coord.y && circle.y - conf.RADIUS <= box.coord.y + box.height))\n  ){\n    return true;\n  }\n  return false;\n}\n\nconst collideBoing = (p1: Coord, p2: Brick) => {\n  const nx = (p2.coord.x - p1.x) / (2 * conf.RADIUS)\n  const ny = (p2.coord.y - p1.y) / (2 * conf.RADIUS)\n  const gx = -ny\n  const gy = nx\n\n  const v1g = gx * p1.dx + gy * p1.dy\n  const v2n = nx * 1 + ny * 1\n  const v2g = gx * 1 + gy * 1\n  const v1n = nx * p1.dx + ny * p1.dy\n\n  if((p1.x < p2.coord.x || p1.x > p2.coord.x + p2.width) && p1.y >= p2.coord.y && p1.y <= p2.coord.y + p2.height){\n    p1.dx = -p1.dx\n  }\n  if((p1.y < p2.coord.y || p1.y > p2.coord.y + p2.height) && p1.x >= p2.coord.x && p1.y <= p2.coord.x + p2.width){\n    p1.dy = -p1.dy\n  }\n  else{\n    p1.dx = -p1.dx\n    p1.dy = -p1.dy\n  }\n  \n  //p1.dx = -p1.dx //nx * v2n + gx * v1g\n  //p1.dy = -p1.dy //ny * v2n + gy * v1g\n  //p2.dx = nx * v1n + gx * v2g\n  //p2.dy = ny * v1n + gy * v2g\n  p1.x += p1.dx\n  p1.y += p1.dy\n  //p2.x += p2.dx\n  //p2.y += p2.dy\n}\n\nexport const step = (state: State) => {\n  if (collideCircleBrick(state.ball.coord, state.player)) {\n    \n    kick.play();\n    collideBoing(state.ball.coord, state.player)\n  }\n  state.pos.map((p1, i, arr) => {\n    arr.slice(i + 1).map((p2) => {\n      if (collideCircleBrick(state.ball.coord, p1)) {\n        p1.life--\n        breaking.play();\n        collideBoing(state.ball.coord, p1)\n      }\n    })\n  })\n  //let endOfGame = (state.ball.coord.y + conf.RADIUS > state.size.height)? true: false\n  return {\n    ...state,\n    pos: state.pos.filter((p) => p.life > 0),\n    ball: iterate(state.size, state.ball),\n    //endOfGame: endOfGame\n  }\n}\n\nexport const mouseMove =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    return {\n      ...state,\n      player: {\n        ...state.player,\n        coord: {x: event.x, y: state.player.coord.y}\n      }\n    }\n  }\n\nexport const endOfGame = (state: State): boolean => state.ball.coord.y + conf.RADIUS <= state.size.height\n","import * as conf from './conf'\nimport { State } from './state'\nconst COLORS = {\n  RED: '#ff0000',\n  GREEN: '#00ff00',\n  BLUE: '#0000ff',\n  BLACK: '#000000',\n  WHITE: \"#dedede\"\n}\n\nconst toDoubleHexa = (n: number) =>\n  n < 16 ? '0' + n.toString(16) : n.toString(16)\n\nexport const rgbaTorgb = (rgb: string, alpha = 0) => {\n  let r = 0\n  let g = 0\n  let b = 0\n  if (rgb.startsWith('#')) {\n    const hexR = rgb.length === 7 ? rgb.slice(1, 3) : rgb[1]\n    const hexG = rgb.length === 7 ? rgb.slice(3, 5) : rgb[2]\n    const hexB = rgb.length === 7 ? rgb.slice(5, 7) : rgb[3]\n    r = parseInt(hexR, 16)\n    g = parseInt(hexG, 16)\n    b = parseInt(hexB, 16)\n  }\n  if (rgb.startsWith('rgb')) {\n    const val = rgb.replace(/(rgb)|\\(|\\)| /g, '')\n    const splitted = val.split(',')\n    r = parseInt(splitted[0])\n    g = parseInt(splitted[1])\n    b = parseInt(splitted[2])\n  }\n\n  r = Math.max(Math.min(Math.floor((1 - alpha) * r + alpha * 255), 255), 0)\n  g = Math.max(Math.min(Math.floor((1 - alpha) * g + alpha * 255), 255), 0)\n  b = Math.max(Math.min(Math.floor((1 - alpha) * b + alpha * 255), 255), 0)\n  return `#${toDoubleHexa(r)}${toDoubleHexa(g)}${toDoubleHexa(b)}`\n}\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\nconst drawCirle = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI)\n  ctx.fill()\n}\n\nconst drawRectangle = (\n  ctx: CanvasRenderingContext2D,\n  { x, y }: { x: number; y: number },\n  color: string\n) => {\n  ctx.beginPath()\n  ctx.fillStyle = color\n  //ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI)\n  ctx.fillRect(x, y, 100, 30)\n}\n\nconst computeColor = (life: number, maxLife: number, baseColor: string) =>\n  rgbaTorgb(baseColor, (maxLife - life) * (1 / maxLife))\n\nexport const render = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  clear(ctx)\n\n  state.pos.map((c) =>\n    drawRectangle(ctx, c.coord, computeColor(c.life, conf.BRICKLIFE, COLORS.BLACK))\n  )\n  drawCirle(ctx, state.ball.coord, computeColor(5, conf.BRICKLIFE, COLORS.RED))\n  drawRectangle(ctx, state.player.coord, computeColor(5, conf.BRICKLIFE, COLORS.BLACK))\n\n  if (state.endOfGame) {\n    const text = 'END'\n    ctx.font = '48px arial'\n    ctx.strokeText(text, state.size.width / 2 - 200, state.size.height / 2)\n  }\n}\n","import * as conf from './conf'\nimport { useRef, useEffect } from 'react'\nimport { State, step, click, mouseMove, endOfGame } from './state'\nimport { render } from './renderer'\n\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\nconst randomSign = () => Math.sign(Math.random() - 0.5)\n\nconst initCanvas =\n  (iterate: (ctx: CanvasRenderingContext2D) => void) =>\n  (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    requestAnimationFrame(() => iterate(ctx))\n  }\n\nconst Canvas = ({ height, width }: { height: number; width: number }) => {\n  let Xbricks = new Array()\n  let x = 0\n  let nbBox = 0\n  while(x < width){\n    x+=100\n    nbBox++\n  }\n  let y = 0\n  let Ybricks = new Array()\n  for(let j = 0; j<conf.NBLINES;j++){\n    x = 0\n    for(let i = 0;i<nbBox;i++){\n      Xbricks.push(x)\n      Ybricks.push(y)\n      x += 100\n    }\n    y += 30\n  }\n  const initialState: State = {\n    pos: new Array(nbBox*conf.NBLINES).fill(1).map((_, index) => ({\n      life: conf.BRICKLIFE,\n      coord: {\n        x: Xbricks[index] ,\n        y: Ybricks[index] ,\n      },\n      height: 30,\n      width : 100\n    })),\n    ball: {\n      life: conf.BRICKLIFE,\n      invincible: -1,\n      coord: {\n        x: 500,//randomInt(width - 120) + 60,\n        y: 500,//randomInt(height - 120) + 60,\n        dx: -5,//4 * randomSign(),\n        dy: -5,//4 * randomSign(),\n      }},\n    size: { height, width },\n    player : {\n      coord: {x: width/2, y: height-40},\n      height: 30,\n      width: 100,\n      life: 10000\n    },\n    endOfGame: true,\n  }\n\n  const ref = useRef<any>()\n  const state = useRef<State>(initialState)\n\n  const iterate = (ctx: CanvasRenderingContext2D) => {\n    state.current = step(state.current)\n    state.current.endOfGame = !endOfGame(state.current)\n    render(ctx)(state.current)\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx))\n  }\n  const onClick = (e: PointerEvent) => {\n    state.current = click(state.current)(e)\n  }\n\n  const onMove = (e: PointerEvent) => {\n    state.current = mouseMove(state.current)(e)\n  }\n  useEffect(() => {\n    if (ref.current) {\n      initCanvas(iterate)(ref.current)\n      ref.current.addEventListener('click', onClick)\n      ref.current.addEventListener('mousemove', onMove)\n    }\n    return () => {\n      ref.current.removeEventListener('click', onMove)\n      ref.current.removeEventListener('mousemove', onMove)\n    }\n  }, [])\n  return <canvas {...{ height, width, ref }} />\n}\n\nexport default Canvas\n","import { useRef, useEffect, useState } from 'react'\nimport Loader from './components/loader'\nimport Canvas from './components/canvas'\nimport './App.css'\n\ntype Size = {\n  height: number\n  width: number\n}\nconst App = () => {\n  const [size, setSize] = useState<Size | null>(null)\n  const container = useRef<any>()\n  useEffect(() => {\n    setTimeout(() => {\n      setSize({\n        height: container.current.clientHeight,\n        width: container.current.clientWidth,\n      })\n    }, 100)\n  })\n  return (\n    <div className=\"App\" ref={container}>\n      {size ? <Canvas {...size} /> : <Loader />}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}